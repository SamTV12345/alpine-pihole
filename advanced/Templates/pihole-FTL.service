#!/sbin/openrc-run
#source utils.sh for getFTLPIDFile(), getFTLPID ()
PI_HOLE_SCRIPT_DIR="/opt/pihole"
utilsfile="${PI_HOLE_SCRIPT_DIR}/utils.sh"
. "${utilsfile}"

# Start the service
start() {
    # Touch files to ensure they exist (create if non-existing, preserve if existing)
    mkdir -pm 0755 /run/pihole /var/log/pihole
    touch /run/pihole-FTL.pid /run/pihole-FTL.port /var/log/pihole/FTL.log /var/log/pihole/pihole.log /etc/pihole/dhcp.leases
    # Ensure that permissions are set so that pihole-FTL can edit all necessary files
    chown pihole:pihole /run/pihole-FTL.pid /run/pihole-FTL.port /var/log/pihole/FTL.log /var/log/pihole/pihole.log /etc/pihole/dhcp.leases /run/pihole /etc/pihole
    chmod 0644 /run/pihole-FTL.pid /run/pihole-FTL.port /var/log/pihole/FTL.log /var/log/pihole/pihole.log /etc/pihole/dhcp.leases
    # Ensure that permissions are set so that pihole-FTL can edit the files. We ignore errors as the file may not (yet) exist
    chmod -f 0644 /etc/pihole/macvendor.db
    # Chown database files to the user FTL runs as. We ignore errors as the files may not (yet) exist
    chown -f pihole:pihole /etc/pihole/pihole-FTL.db /etc/pihole/gravity.db /etc/pihole/macvendor.db
    # Chown database file permissions so that the pihole group (web interface) can edit the file. We ignore errors as the files may not (yet) exist
    chmod -f 0777 /etc/pihole/pihole-FTL.db
    if setcap CAP_NET_BIND_SERVICE,CAP_NET_RAW,CAP_NET_ADMIN,CAP_SYS_NICE,CAP_IPC_LOCK,CAP_CHOWN+eip "/usr/bin/pihole-FTL"; then
      su -s /bin/sh -c "/usr/bin/pihole-FTL" pihole
    else
      echo "Warning: Starting pihole-FTL as root because setting capabilities is not supported on this system"
      start-stop-daemon --start --quiet /usr/bin/pihole-FTL
    fi
    echo

    # Backward compatibility for user-scripts that still expect log files in /var/log instead of /var/log/pihole/
    # Should be removed with Pi-hole v6.0
    if [ ! -f /var/log/pihole.log ]; then
        ln -s /var/log/pihole/pihole.log /var/log/pihole.log
        chown -h pihole:pihole /var/log/pihole.log

    fi
    if [ ! -f /var/log/pihole-FTL.log ]; then
        ln -s /var/log/pihole/FTL.log /var/log/pihole-FTL.log
        chown -h pihole:pihole /var/log/pihole-FTL.log
    fi
}

# Stop the service
stop() {
  if pgrep pihole-FTL > /dev/null; then
    start-stop-daemon --stop --quiet /usr/bin/pihole-FTL
    while [ "$(pgrep pihole-FTL > /dev/null)" == 0 ]
    do
	    echo "Waiting for the service to stop"
    done
    echo "Stopped"
  else
    echo "Not running"
  fi
  # Cleanup
  rm -f /run/pihole/FTL.sock /dev/shm/FTL-*
  echo
}

# Indicate the service status
status() {
  if service_started "${SVCNAME}"; then
    echo "[ ok ] pihole-FTL is running"
    exit 0
  else
    echo "[    ] pihole-FTL is not running"
    exit 1
  fi
}
